// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CajaLote {
  CajaLoteId        Int                @id @default(autoincrement())
  ContratoId        Int?
  Caja              Int
  Lote              Int
  Nota              String             @default("")
  DocumentoId       Int?
  fechaCreacion     DateTime           @default(now())
  DocumentoContrato DocumentoContrato? @relation(fields: [DocumentoId], references: [DocumentoId])
  Contrato          Contrato?          @relation(fields: [ContratoId], references: [ContratoId])
}

model Comunicacion {
  comunicationId    Int               @id @default(autoincrement())
  userId            Int
  contractoId       Int
  tipoComunicacion  TIPO_COMUNICACION
  data              String            @db.LongText
  emailDestinatario String
  createdAt         DateTime          @default(now())
  Usuario           Usuario           @relation(fields: [userId], references: [UsuarioId])
  Contrato          Contrato          @relation(fields: [contractoId], references: [ContratoId])
}

model Rol {
  RolId     Int       @id @default(autoincrement())
  Nombre    String    @unique
  createdAt DateTime? @default(now())
  FechaBaja DateTime?
  updatedAt DateTime  @default(now()) @updatedAt
  Usuario   Usuario[]
  Activo    Boolean?  @default(true)
}

model Usuario {
  UsuarioId             Int                   @id @default(autoincrement())
  Nombre                String
  Password              String
  CaducidadPassword     DateTime?
  RolId                 Int
  Codigo                String?               @unique
  FechAlta              DateTime?             @default(now())
  FechaBaja             DateTime?
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @default(now()) @updatedAt
  Rol                   Rol                   @relation(fields: [RolId], references: [RolId])
  LogAccion             LogAccion[]
  DocumentoContrato     DocumentoContrato[]
  IncidenciaDocumento   IncidenciaDocumento[]
  ObservacionIncidencia DetalleObservacion[]
  Reclamaciones         Reclamaciones[]
  Activo                Boolean?              @default(true)
  Contrato              Contrato[]
  Comunicacion          Comunicacion[]
}

model LogAccion {
  LogId     Int         @id @default(autoincrement())
  UsuarioId Int
  Accion    TIPO_ACCION
  createdAt DateTime    @default(now())
  Usuario   Usuario     @relation(fields: [UsuarioId], references: [UsuarioId])
  LogCarga  LogCarga[]
}

model LogCarga {
  LogCargaId     Int        @id @default(autoincrement())
  LogId          Int
  Tipo           TIPO_CARGA
  TotalRegistros Int        @default(0)
  Insertados     Int        @default(0)
  revisarCont    Int        @default(0)
  Actualizados   Int        @default(0)
  Desechados     Int        @default(0)
  ConError       Int        @default(0)
  Details        String     @db.LongText
  createdAt      DateTime   @default(now())
  LogAccion      LogAccion  @relation(fields: [LogId], references: [LogId])
}

model Compania {
  CompaniaId      Int        @id @default(autoincrement())
  Nombre          String
  Codigo          String     @unique
  Descripcion     String?
  Telefono        String?
  CorreoComp      String?
  ReclamarComp    Boolean?   @default(false)
  CorreoSoporte   String?
  ReclamarSoporte Boolean?   @default(false)
  ColorBase       String?
  createdAt       DateTime?  @default(now())
  FechaBaja       DateTime?
  updatedAt       DateTime?  @default(now()) @updatedAt
  Producto        Producto[]
  Contrato        Contrato[]
  Activo          Boolean    @default(true)
  Precios         Precios[]
  Mediador        Mediador[]
}

model Mediador {
  MediadorId        Int        @id @default(autoincrement())
  Nombre            String
  Codigo            String
  Canal             String?
  Zona              String?
  CompaniaId        Int
  Email             String?
  Responsable       String?
  EmailResponsable  String?
  Responsable2      String?
  EmailResponsable2 String?
  Compania          Compania   @relation(fields: [CompaniaId], references: [CompaniaId])
  Reclamar          Boolean?   @default(false)
  createdAt         DateTime?  @default(now())
  FechaBaja         DateTime?
  FechaUltimaModif  DateTime?  @default(now())
  Observaciones     String?
  Contrato          Contrato[]
  Activo            Boolean?   @default(true)
}

model MaestroIncidencias {
  IncidenciaId                 Int                       @id
  DocAsociadoId                Int?
  Codigo                       String
  Nombre                       String                    @db.Text
  createdAt                    DateTime                  @default(now())
  FechaBaja                    DateTime?
  updatedAt                    DateTime                  @default(now()) @updatedAt
  FamiliaDocumento             FamiliaDocumento?         @relation(fields: [DocAsociadoId], references: [FamiliaId])
  Activo                       Boolean
  TipoDocumentoIncidencia      TipoDocumentoIncidencia[]
  maestroDocumentosDocumentoId Int?
}

model RepositorioPlantillas {
  PlantillaId                        Int                     @id
  Documento                          Bytes?
  Nombre                             String
  Activo                             Boolean
  createdAt                          DateTime                @default(now())
  FechaBaja                          DateTime?
  updatedAt                          DateTime                @default(now()) @updatedAt
  incidenciaProductoTipoOperacion    ProductoTipoOperacion[] @relation("IncidenciaPlantilla")
  conciliacionProductoTipoOperacion  ProductoTipoOperacion[] @relation("ConciliacionPlantilla")
  anexoIncidenciaProductoDocumento   ProductoDocumento[]     @relation("AnexoIncidenciaPlantilla")
  anexoConciliacionProductoDocumento ProductoDocumento[]     @relation("AnexoConciliacionPlantilla")
  caratulaProductoDocumento          ProductoDocumento[]     @relation("CaratulaPlantilla")
}

model Producto {
  ProductoId            Int                     @id @default(autoincrement())
  CompId                Int
  Codigo                String                  @unique
  Descripcion           String?
  Reclamar              Boolean?                @default(false)
  Activo                Boolean?                @default(true)
  createdAt             DateTime?               @default(now())
  FechaBaja             DateTime?
  updatedAt             DateTime                @default(now()) @updatedAt
  Observaciones         String?
  Compania              Compania                @relation(fields: [CompId], references: [CompaniaId])
  ProductoTipoOperacion ProductoTipoOperacion[]
  Contrato              Contrato[]
}

model ProductoTipoOperacion {
  ProductoTipoOpId      Int                    @id
  ProductoId            Int
  PlantillaIncidencia   Int?
  PlantillaConciliacion Int?
  TipoOperacion         String
  Activo                Boolean
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @default(now()) @updatedAt
  FechaBaja             DateTime?
  Producto              Producto               @relation(fields: [ProductoId], references: [ProductoId])
  ProductoDocumento     ProductoDocumento[]
  incidenciaPlantilla   RepositorioPlantillas? @relation("IncidenciaPlantilla", fields: [PlantillaIncidencia], references: [PlantillaId])
  conciliacionPlantilla RepositorioPlantillas? @relation("ConciliacionPlantilla", fields: [PlantillaConciliacion], references: [PlantillaId])
}

model MaestroDocumentos {
  DocumentoId             Int                       @id
  FamiliaId               Int
  Codigo                  String
  Nombre                  String
  Descripcion             String?
  Suplemento              Boolean
  createdAt               DateTime                  @default(now())
  FechaBaja               DateTime?
  updateAt                DateTime                  @default(now()) @updatedAt
  FamiliaDocumento        FamiliaDocumento          @relation(fields: [FamiliaId], references: [FamiliaId])
  ProductoDocumento       ProductoDocumento[]
  DocumentoContrato       DocumentoContrato[]
  Activo                  Boolean
  TipoDocumentoIncidencia TipoDocumentoIncidencia[]
}

model FamiliaDocumento {
  FamiliaId          Int                  @id @default(autoincrement())
  Codigo             String
  Nombre             String
  Activo             Boolean              @default(true)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @default(now()) @updatedAt
  MaestroDocumentos  MaestroDocumentos[]
  MaestroIncidencias MaestroIncidencias[]
}

model TipoDocumentoIncidencia {
  TipoDocumentoIncidenciaId Int      @id @default(autoincrement())
  DocumentoId               Int
  IncidenciaId              Int
  MailInterno               String?
  Activo                    Boolean  @default(true)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @default(now()) @updatedAt

  MaestroIncidencias  MaestroIncidencias    @relation(fields: [IncidenciaId], references: [IncidenciaId])
  MaestroDocumentos   MaestroDocumentos     @relation(fields: [DocumentoId], references: [DocumentoId])
  IncidenciaDocumento IncidenciaDocumento[]
}

model DocumentoContrato {
  DocumentoId       Int       @id @default(autoincrement())
  ContratoId        Int
  DocId             Int
  ProdctoDoc        Int
  UsuarioId         Int
  EstadoDoc         String
  NumeReclamaciones Int       @default(0)
  FechaReclamacion  DateTime?

  FechaConciliacion   DateTime?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @default(now()) @updatedAt
  ProductoDocumento   ProductoDocumento     @relation(fields: [ProdctoDoc], references: [ProductoDocId])
  Contrato            Contrato              @relation(fields: [ContratoId], references: [ContratoId])
  MaestroDocumentos   MaestroDocumentos     @relation(fields: [DocId], references: [DocumentoId])
  Usuario             Usuario               @relation(fields: [UsuarioId], references: [UsuarioId])
  IncidenciaDocumento IncidenciaDocumento[]

  CajaLote                 CajaLote[]
  DocumentoContratoHistory DocumentoContratoHistory[]
}

model DocumentoContratoHistory {
  DocumentoContratoHistoryId Int       @id @default(autoincrement())
  DocumentoId                Int
  DocId                      Int
  ProdctoDoc                 Int
  UsuarioId                  Int
  EstadoDoc                  String
  NumeReclamaciones          Int       @default(0)
  FechaReclamacion           DateTime?

  FechaConciliacion DateTime?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @default(now()) @updatedAt
  DocumentoContrato DocumentoContrato @relation(fields: [DocumentoId], references: [DocumentoId])
}

model ProductoDocumento {
  ProductoDocId         Int                    @id @default(autoincrement())
  ProductoId            Int
  DocumentoId           Int
  AnexoIncidencias      Int?
  AnexoConciliacion     Int?
  Caratula              Int?
  RequiereComunicacion  Boolean?               @default(false)
  Fase                  String
  Activo                Boolean
  createdAt             DateTime               @default(now())
  FechaBaja             DateTime?
  ProductoTipoOperacion ProductoTipoOperacion  @relation(fields: [ProductoId], references: [ProductoTipoOpId])
  MaestroDocumento      MaestroDocumentos      @relation(fields: [DocumentoId], references: [DocumentoId])
  anexoIncidencia       RepositorioPlantillas? @relation("AnexoIncidenciaPlantilla", fields: [AnexoIncidencias], references: [PlantillaId])
  anexoConciliacion     RepositorioPlantillas? @relation("AnexoConciliacionPlantilla", fields: [AnexoConciliacion], references: [PlantillaId])
  caratula              RepositorioPlantillas? @relation("CaratulaPlantilla", fields: [Caratula], references: [PlantillaId])
  DocumentoContrato     DocumentoContrato[]
}

model TipoConciliacion {
  tipoConciliacionId Int        @id @default(autoincrement())
  nombre             String
  createdAt          DateTime   @default(now())
  fechaBaja          DateTime?
  updatedAt          DateTime   @default(now()) @updatedAt
  Activo             Boolean    @default(true)
  Contrato           Contrato[]
}

model Contrato {
  ContratoId     Int             @id @default(autoincrement())
  EstadoContrato ESTADO_CONTRATO @default(PENDIENTE)
  ClaveOperacion String          @unique
  CompaniaId     Int
  ProductoId     Int
  MediadorId     Int

  FechaOperacion           DateTime?
  TipoOperacion            String    @default("ALTA")
  CCC                      String    @default("")
  CodigoSolicitud          String    @default("")
  CodigoPoliza             String    @default("")
  FechaEfecto              DateTime?
  AnuladoSEfecto           Boolean?  @default(false)
  Suplemento               Boolean   @default(false)
  DNIAsegurado             String    @default("")
  NombreAsegurado          String    @default("")
  FechaNacimientoAsegurado DateTime?
  CSRespAfirmativas        Boolean   @default(false)
  ProfesionAsegurado       String    @default("")
  DeporteAsegurado         String    @default("")
  DNITomador               String    @default("")
  FechaValidezDNITomador   DateTime?
  NombreTomador            String    @default("")
  Operador                 String    @default("")
  IndicadorFDPRECON        Boolean?  @default(false)
  TipoEnvioPRECON          String    @default("")
  ResultadoFDPRECON        String    @default("")
  IndicadorFDCON           Boolean?
  TipoEnvioCON             String    @default("")
  ResultadoFDCON           String    @default("")
  FechaGrabacion           DateTime?
  NumeroReclamaciones      Int       @default(0)
  FechaProximaReclamacion  DateTime?
  FechaReclamacion         DateTime?

  Revisar            Boolean              @default(true)
  Conciliar          Boolean              @default(true)
  errores            Json?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @default(now()) @updatedAt
  Compania           Compania             @relation(fields: [CompaniaId], references: [CompaniaId])
  Producto           Producto             @relation(fields: [ProductoId], references: [ProductoId])
  Mediador           Mediador             @relation(fields: [MediadorId], references: [MediadorId])
  TipoConciliacion   TipoConciliacion?    @relation(fields: [TipoConciliacionId], references: [tipoConciliacionId])
  TipoConciliacionId Int?
  DetalleObservacion DetalleObservacion[]
  DocumentoContrato  DocumentoContrato[]
  Reclamaciones      Reclamaciones[]
  Activo             Boolean?             @default(true)
  HistorialContrato  HistorialContrato[]
  NotaInterna        String               @default("")
  CajaLote           CajaLote[]

  UsuarioId Int?

  Usuario      Usuario?       @relation(fields: [UsuarioId], references: [UsuarioId])
  Comunicacion Comunicacion[]
}

model HistorialContrato {
  ContratoHistoryId Int    @id @default(autoincrement())
  ContratoId        Int?
  ClaveOperacion    String @default("")

  CCC                      String              @default("")
  CodigoSolicitud          String              @default("")
  CodigoPoliza             String              @default("")
  CompaniaId               Int?
  ProductoId               Int?
  MediadorId               Int?
  EstadoContrato           ESTADO_CONTRATO?
  Operacion                OPERACION_CONTRATO?
  FechaOperacion           DateTime?
  FechaEfecto              DateTime?
  AnuladoSEfecto           Boolean?            @default(false)
  Suplemento               Boolean?            @default(false)
  DNIAsegurado             String?
  NumeroReclamaciones      Int                 @default(0)
  FechaProximaReclamacion  DateTime?
  FechaReclamacion         DateTime?
  NombreAsegurado          String?
  FechaNacimientoAsegurado DateTime?
  CSRespAfirmativas        Boolean?
  ProfesionAsegurado       String?
  DeporteAsegurado         String?
  DNITomador               String?
  FechaValidezDNITomador   DateTime?
  NombreTomador            String?
  Operador                 String?
  IndicadorFDPRECON        Boolean?
  TipoEnvioPRECON          String?
  ResultadoFDPRECON        String?
  IndicadorFDCON           Boolean?
  TipoEnvioCON             String?
  ResultadoFDCON           String?
  createdAt                DateTime            @default(now())
  Revisar                  Boolean?            @default(true)
  Conciliar                Boolean?            @default(true)
  errores                  Json?
  Activo                   Boolean?            @default(true)
  Contrato                 Contrato?           @relation(fields: [ContratoId], references: [ContratoId])
  FechaGrabacion           DateTime?

  NotaInterna String @default("")
}

model NoProcesar {
  NoprocesarId             Int     @id @default(autoincrement())
  MotivoDesechado          String?
  Compania                 String?
  Producto                 String?
  FechaOperacion           String?
  TipoOperacion            String?
  CCC                      String?
  CodigoSolicitud          String?
  CodigoPoliza             String?
  FechaEfecto              String?
  AnuladoSEfecto           String?
  Suplemento               String?
  DNIAsegurado             String?
  NombreAsegurado          String?
  FechaNacimientoAsegurado String?
  CSRespAfirmativas        String?
  ProfesionAsegurado       String?
  DeporteAsegurado         String?
  DNITomador               String?
  FechaValidezDNITomador   String?
  NombreTomador            String?
  Mediador                 String?
  Operador                 String?
  IndicadorFDPRECON        String?
  TipoEnvioPRECON          String?
  ResultadoFDPRECON        String?
  IndicadorFDCON           String?
  TipoEnvioCON             String?
  ResultadoFDCON           String?

  Revisar   String?
  Conciliar String?
  createdAt DateTime @default(now())
}

model Tableta {
  TabletaId               Int       @id @default(autoincrement())
  Compannia               String?
  TipoProducto            String?
  TipoSubProducto         String?
  NombreComercialProducto String?
  CodigoProducto          String?
  CodigoModalidad         String?
  CodigoPoliza            String?
  CodigoSolicitud         String?
  FechaGrabacion          DateTime?
  DNIAsegurado            String?
  NombreAsegurado         String?
  NumIdentificacionTo     String?
  NombreTo                String?
  CodigoMediador          String?
  NombreMediador          String?
  CodigoSubmediador       String?   @db.LongText
  NombreSubMediador       String?   @db.LongText
  CCC                     String?
  FechaOperacion          DateTime?
  FechaActualizacion      DateTime?
  DescOperacion           String?
  TipoRegistro            String?
  CodigoInternoFormulario String?
  DescFormulario          String?
  TipoFirma               String?
  FechaFirma              DateTime?
  SituacionFirma          String?
  CanalMediador           String?
  CanalRecepcionFirma     String?
  CodigoCentro            String?
  NumActualizaciones      Int?
  Usuario                 String?
  Conciliar               Boolean?
  FormularioPrincipal     Boolean?
  Observaciones           String?
  FechaGeneracion         DateTime?
  FechaCarga              DateTime?
  Actualiazado            Boolean   @default(false)
  Activo                  Boolean?  @default(true)
  createdAt               DateTime  @default(now())
  errores                 Json?
}

model FirmaDigital {
  FirmaDigitalId  Int       @id @default(autoincrement())
  AnnoMes         String?
  NumPoliza       String?
  CodigoPolizaTc  String?
  EstadoPoliza    String?
  TIPO_ENVIO      String?
  Estado          String?
  Resultado       String?
  FechaInicio     DateTime?
  FechaCierre     DateTime?
  Mediador        String?
  DNIAsegurado    String?
  NombreAsegurado String?
  MovilAsegurado  Int?
  DNITomador      String?
  NombreTomador   String?
  MovilTomador    Int?
  Activo          Boolean?  @default(true)
  createdAt       DateTime  @default(now())
  Actualizado     Boolean   @default(false)

  errores Json?
}

model Anuladas {
  anuladasId            Int       @id @default(autoincrement())
  compannia             String?
  claveOperacion        String?
  fechaEmisionAnulacion DateTime?
  fechaEfectoAnulacion  DateTime?
  motivoAnulacion       String?
}

model Incompletas {
  incompletaId             Int     @id @default(autoincrement())
  Compania                 String?
  Producto                 String?
  FechaOperacion           String?
  TipoOperacion            String?
  CCC                      String?
  CodigoSolicitud          String?
  CodigoPoliza             String?
  FechaEfecto              String?
  AnuladoSEfecto           String?
  Suplemento               String?
  DNIAsegurado             String?
  NombreAsegurado          String?
  FechaNacimientoAsegurado String?
  CSRespAfirmativas        String?
  ProfesionAsegurado       String?
  DeporteAsegurado         String?
  DNITomador               String?
  FechaValidezDNITomador   String?
  NombreTomador            String?
  Mediador                 String?
  Operador                 String?
  IndicadorFDPRECON        String?
  TipoEnvioPRECON          String?
  ResultadoFDPRECON        String?
  IndicadorFDCON           String?
  TipoEnvioCON             String?
  ResultadoFDCON           String?

  Revisar   String?
  Conciliar String?

  errores   Json?
  createdAt DateTime @default(now())
  Insertada Boolean  @default(false)
}

model IncidenciaDocumento {
  IncidenciaDocId            Int                          @id @default(autoincrement())
  DocumentoContratoId        Int
  TipoIncidenciaDocumentoId  Int
  Nota                       String?                      @db.LongText
  Reclamada                  DateTime?
  Revisada                   Boolean                      @default(false)
  Enviar                     Boolean                      @default(false)
  UsuarioId                  Int
  createdAt                  DateTime?                    @default(now())
  Resuelta                   Boolean?                     @default(false)
  NumReclamaciones           Int                          @default(0)
  FechaUltimaReclamacion     DateTime?
  updatedAt                  DateTime                     @default(now()) @updatedAt
  TipoDocumentoIncidencia    TipoDocumentoIncidencia      @relation(fields: [TipoIncidenciaDocumentoId], references: [TipoDocumentoIncidenciaId])
  DocumentoContrato          DocumentoContrato            @relation(fields: [DocumentoContratoId], references: [DocumentoId])
  Usuario                    Usuario                      @relation(fields: [UsuarioId], references: [UsuarioId])
  DetalleObservacion         DetalleObservacion[]
  IncidenciaDocumentoHistory IncidenciaDocumentoHistory[]
}

model IncidenciaDocumentoHistory {
  IncidenciaDocHistoryID Int                 @id @default(autoincrement())
  IncidenciaDocId        Int
  Nota                   String?             @db.LongText
  Reclamada              DateTime?
  Revisada               Boolean             @default(false)
  Enviar                 Boolean             @default(false)
  Incidencia             Int?
  UsuarioId              Int
  createdAt              DateTime?           @default(now())
  Resuelta               Boolean?            @default(false)
  NumReclamaciones       Int                 @default(0)
  FechaUltimaReclamacion DateTime?
  updatedAt              DateTime            @default(now()) @updatedAt
  IncidenciaDocumento    IncidenciaDocumento @relation(fields: [IncidenciaDocId], references: [IncidenciaDocId])
}

model Reclamaciones {
  ReclamacionId Int      @id @default(autoincrement())
  ContratoId    Int
  UsuarioId     Int
  Descricion    String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  Contrato      Contrato @relation(fields: [ContratoId], references: [ContratoId])
  Usuario       Usuario  @relation(fields: [UsuarioId], references: [UsuarioId])
}

model DetalleObservacion {
  ObservacionId       Int                  @id @default(autoincrement())
  UsuarioId           Int
  IncidenciaId        Int?
  ContratoId          Int
  Contenido           String
  FechaObs            DateTime             @default(now())
  updatedAt           DateTime             @default(now()) @updatedAt
  Usuario             Usuario              @relation(fields: [UsuarioId], references: [UsuarioId])
  IncidenciaDocumento IncidenciaDocumento? @relation(fields: [IncidenciaId], references: [IncidenciaDocId])
  Contrato            Contrato             @relation(fields: [ContratoId], references: [ContratoId])
}

model Precios {
  PrecioId        Int      @id
  CompaniaId      Int
  Desde           Int
  Hasta           Int
  PrecioActuacion Float
  PrecioFijo      Float
  updatedAt       DateTime @default(now()) @updatedAt
  Compania        Compania @relation(fields: [CompaniaId], references: [CompaniaId])
}

enum TIPO_OPERACION {
  ALTA
  BAJA
}

enum TIPO_ENVIO {
  PRESENCIAL
  REMOTA
}

enum TIPO_FIRMA {
  MANUAL
  DIGITAL
}

enum ESTADO_CONTRATO {
  PENDIENTE
  PENDIENTE_INCIDENCIA
  SIN_CONCILIAR
  TRAMITADA

  ANULADA
  DESECHADO
}

enum TIPO_COMUNICACION {
  DOCUMENTOS_PENDIENTES
  INCIDENCIAS
  DOCUMENTOS_PENDIENTES_INCIDENCIAS
}

enum OPERACION_CONTRATO {
  INSERTADO
  ACTUALIZADO
  DESECHADO
  ELIMINADO
  ANULADO
}

enum TIPO_CARGA {
  POLIZA
  TABLETA
  DIGITAL
  ANULADA
}

enum TIPO_ACCION {
  CARGA
  RELOAD
  UPDATE_CARGA
  INCIDENCIA
  RECLAMACION
  CONCILIACION
  ANULACION
}
